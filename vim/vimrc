set nocompatible

call plug#begin('~/.vim/bundle')

Plug 'mileszs/ack.vim'
Plug 'kien/ctrlp.vim'
Plug 'editorconfig/editorconfig-vim'
Plug 'tpope/vim-surround'
Plug 'tomtom/tcomment_vim'
Plug 'Raimondi/delimitMate'
Plug 'ervandew/supertab'
" Plug 'scrooloose/syntastic'
Plug 'sbdchd/neoformat'
Plug 'neomake/neomake'
Plug 'junegunn/vim-easy-align'
Plug 'junegunn/goyo.vim'
Plug 'junegunn/limelight.vim'
Plug 'itchyny/lightline.vim'

" My own plugins
Plug 'madx/vim-plugins'

" Language support
Plug 'sheerun/vim-polyglot'
Plug 'ElmCast/elm-vim'

" Themes
Plug 'w0ng/vim-hybrid'

call plug#end()

set shortmess+=I

set ruler
syntax on
set background=dark
let g:hybrid_use_Xresources = 1
colorscheme hybrid
let mapleader = ","
set clipboard+=unnamedplus
set showcmd
set hidden
set nojoinspaces
set laststatus=2

set splitbelow
set splitright

set spelllang=fr

" Whitespace
set ai
set si
set so=5
set tabstop=2
set shiftwidth=2
set expandtab
set nowrap
set smarttab

set fillchars=vert:\┃,fold:-

" No backup/swap files
set nobackup
set backupdir=
set directory=
set nowritebackup
set noswapfile

" Search
set nohlsearch
set incsearch
set ignorecase
set smartcase

" Mouse is fine
set mouse=a
if !has("nvim")
  set ttymouse=xterm2
endif

" Nicer mouse editing
set virtualedit=block

" Ignores
set wildignore+=tmp/*
set wildignore+=app/assets/images/*
set wildignore+=public/images/*
set wildignore+=.git/*
set wildignore+=.svn/*

" Default status line with padding
set statusline=\ %<%f\ %h%m%r%=%-14.(%l,%c%V%)\ %P\

" Cursor shape in terminal (nvim only)
if has("nvim")
  let $NVIM_TUI_ENABLE_CURSOR_SHAPE=1
endif

" Friendly netrw browsing
let g:netrw_liststyle = 3
let g:netrw_banner = 0

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"" Numbering

set nonumber
set norelativenumber
noremap <Leader>nn :set number! relativenumber!<cr>


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"" CUSTOM MAPPINGS

nnoremap <Space> .
nnoremap ' `
nnoremap ` '

" Copy/paste
vnoremap <Leader>C "*y
vnoremap <Leader>X "*d
noremap  <Leader>V "*p

" Commenting
nmap <Leader>c gcc
vmap <Leader>c gc

" File navigation
nmap <Leader>aa :next<cr>
nmap <Leader>aA :prev<cr>
nmap <Leader>bb :bn<cr>
nmap <Leader>bB :bp<cr>
nmap <leader>b# :b#<cr>
nmap <Leader>b<Space> :b#<cr>

" Quickfix navigation
nmap <Leader>qq :cn<cr>zz
nmap <Leader>qQ :cp<cr>zz

" Location navigation
nmap <Leader>ll :lne<cr>zz
nmap <Leader>lL :lp<cr>zz

" Conflict resolution
nmap <Leader>in /^\(<<<<\\|====\\|>>>>\)<cr>
nmap <Leader>ip ?^\(<<<<\\|====\\|>>>>\)<cr>

" Edit shortcuts
map Q gq
nnoremap < <<
nnoremap > >>

" Quick navigation
noremap <C-J> J^
noremap <C-K> kJ^
noremap J 10j
noremap K 10k

" Easy window management
nmap <silent> <leader>w<Space> :call WMFocusMasterWindow()<CR>
nmap <silent> <leader>w<CR>    :call WMSwapWithMasterWindow()<CR>
nmap <silent> <leader>wm       :call WMMarkWindowSwap()<CR>
nmap <silent> <leader>wx       :call WMDoWindowSwap()<CR>
nmap <silent> <leader>wt       :call WMReStack()<CR>
nmap <silent> <leader>w        <C-w>
nmap <silent> <C-Left>         <C-w>h
nmap <silent> <C-Down>         <C-w>j
nmap <silent> <C-Up>           <C-w>k
nmap <silent> <C-Right>        <C-w>l


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"" MISC

" Expand %% to dir of current file
cmap %% <C-R>=expand('%:h').'/'<cr>

" Trim whitespace at line ends
map <F2> <Esc>:%s/\s\+$//<CR>
com! Trim exe "%s/\\s\\+$//"
com! Date exe "r!date +'date: \\%FT\\%R\\%:z'"


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"" PLUGINS

"-------------------------------------------------------------------------------
" Ack with ag
let g:ackprg = 'ag --vimgrep --smart-case'
cnoreabbrev ag Ack
cnoreabbrev aG Ack
cnoreabbrev Ag Ack
cnoreabbrev AG Ack

" Search for word under cursor
nmap <Leader>S yiw:Ag <C-R>"<cr>
vmap <Leader>S :<C-W>Ag <C-R>*<cr>
"-------------------------------------------------------------------------------

"-------------------------------------------------------------------------------
" CtrlP
let g:ctrlp_user_command = 'ag %s -l --nocolor --hidden -g "" --path-to-ignore ~/.agignore'
let g:ctrlp_clear_cache_on_exit = 1
let g:ctrlp_map = ''

nmap <Leader>oo :CtrlP<cr>
nmap <Leader>of :CtrlPMixed<cr>
nmap <Leader>ob :CtrlPBuffer<cr>
nmap <Leader>or :CtrlPMRU<cr>
"-------------------------------------------------------------------------------

"-------------------------------------------------------------------------------
" Align
vmap <Leader>Asym :Align! l:p0P1 :
vmap <Leader>Astr :Align! l:p0P1 "
vmap <Leader>A=   :Align! l:p1P1 =
"-------------------------------------------------------------------------------

"-------------------------------------------------------------------------------
" Syntastic
" let g:syntastic_enable_signs = 1
" let g:syntastic_javascript_checkers = ['eslint']
" let g:syntastic_error_symbol = "✗"
" let g:syntastic_warning_symbol = "⚠"
" let g:syntastic_check_on_open = 1
"
" function! SetJSChecker(checker)
"   let g:syntastic_javascript_checkers = [a:checker]
" endfunction
" com! Eslint call SetJSChecker('eslint')
" com! Jshint call SetJSChecker('jshint')
"-------------------------------------------------------------------------------

"-------------------------------------------------------------------------------
" lightline.vim
let g:lightline = {
  \ 'colorscheme': 'jellybeans',
  \ 'component': {
  \   'filename': '%f'
  \ },
  \ 'separator': { 'left': '', 'right': '' },
  \ 'subseparator': { 'left': 'ັ', 'right': '' }
\}
"-------------------------------------------------------------------------------

"-------------------------------------------------------------------------------
" Polyglot
"-------------------------------------------------------------------------------
let g:polyglot_disabled = ['elm']
"-------------------------------------------------------------------------------


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"" GVIM
if has('gui_running')
  set guioptions=aegict
  set guifont=Droid\ Sans\ Mono\ 10
  set listchars=nbsp:⋅,trail:⋅
  set linespace=2
  if ! exists("g:startedonce")
    set columns=86
    set lines=32
    let g:startedonce = 1
  endif
  autocmd GUIEnter * set novisualbell t_vb=
endif


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"" Vim project files
let s:vimprojfile = findfile('.vimproject', '.;')
if !empty(s:vimprojfile)
  exec 'source '.fnameescape(s:vimprojfile)
endif
