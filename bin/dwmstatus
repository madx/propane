#!/usr/bin/env bash

set -euo pipefail
IFS=$'\n\t'

DEBUG=${DEBUG:-""}

DE_CONFIG_DIR="${XDG_CONFIG_HOME}/de"
DE_DATA_DIR="${XDG_DATA_HOME}/de"
CONFIG_FILE="$DE_CONFIG_DIR/dwmstatus.config.sh"
PID_FILE="$DE_DATA_DIR/dwmstatus.pid"

BAT=DISABLED
IFACE=DISABLED
ROOT_VOLUME=DISABLED

if [ -f "$CONFIG_FILE" ]; then
  source "$CONFIG_FILE"
fi

_volume() {
  ponymix is-muted

  if [ $? -eq 0 ]; then
    echo "🔇 MUTE"
  else
    local volume=$(ponymix get-volume)
    echo " 🔊 ${volume}%"
  fi
}

_ifstatus() {
  if [ "$IFACE" = "DISABLED" ]; then
    return
  fi

  local ipaddr=$(ip addr | grep $IFACE: -A2 | tail -n1 | awk '{print $2}' | cut -d/ -f1)

  echo -en "📶 $ipaddr | "
}

_diskspace() {
  if [ "$ROOT_VOLUME" = "DISABLED" ]; then
    return
  fi

  local diskspace=$(df -h | tr -s ' ' | grep $ROOT_VOLUME | cut -d ' ' -f 5)
  local percentage="${diskspace%%%}"
  local color=""

  if [ $percentage -gt 80 ]; then
    color=""
  fi

  echo -en "⛂ ${color}${diskspace} | "
}

_date() {
  date +"%F %R"
}

_battery() {
  if [ "$BAT" = "DISABLED" ]; then
    return
  fi

  local battery_stat=$(acpi -b | grep "$BAT")
  local percentage=$(echo $battery_stat | cut -d, -f2 | tr -d ' ')
  local status=$(echo $battery_stat | cut -d, -f1 | cut -d: -f2 | tr -d ' ')
  local indicator=""

  case $status in
    Charging) indicator="↑" ;;
    Discharging) indicator="↓" ;;
  esac

  echo "$indicator$percentage | "
}

_recording() {
  if [ -f "$DE_DATA_DIR/gifcast.pid" ]; then
    echo -n " | ⏺ REC"
  fi
}

_set_status() {
  status="$(_volume) | $(_battery)$(_ifstatus)$(_diskspace)$(_date)$(_recording)"
  if [ -n "$DEBUG" ]; then
    echo "> update status"
    echo $status
  else
    xsetroot -name "$status"
  fi
}

_restart() {
  if [ -n "$DEBUG" ]; then
    echo "> restarting"
  fi

  notify-send --expire-time 1000 --icon system-run "Restarting dwmstatus"
  exec /home/madx/bin/dwmstatus $@
}

_refresh() {
  if [ -n "$DEBUG" ]; then
    echo "> force refresh"
  fi

  _set_status
}

trap _restart ALRM
trap _refresh WINCH

command=${1:-run}

case "$command" in
  restart)
    kill -ALRM $(cat "$PID_FILE")
    ;;
  refresh)
    kill -WINCH $(cat "$PID_FILE")
    ;;
  run)
    echo -n $$ > "$PID_FILE"
    while true; do
      _set_status
      sleep 1
    done
    ;;
esac

